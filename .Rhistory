firstcolumn
bad<-is.na[firstcolumn]
bad<-is.na(firstcolumn)
bad
firstcolumn[!bad]
firstcolumn[bad]
mean(firstcolumn[!bad])
ss18<-data["Ozone">31]
ss18
data["Ozone">31]
data[,1>31]
data[1,2]
data[data[,1]>31]
Ozone<-data[,1]
Ozone
Ozonwover31<-Ozone[Ozone>31]
Ozoneover31
Ozonwover31
ss18<-Data[Data[,1]>31]
ss18<-data[data[,1]>31]
Tempss<-data[,"Temp">90]
Tempss
Tempss<-data[,"Temp"]90]
Tempss<-data[,"Temp"]>90
Tempss
ss18<-data[,"Temp"]>90
Month6<-data[data[,"Month"]>6]
Month6<-data[data[,"Month">6]]
data[,"Month"]>6
data[data[,"Month"]>6]
ss1<-[data[,"Month"]>6]
ss1<-data[,"Month"]>6
mean(data[ss1])
ss1<-data[,"Month">6]
ss1
dataMay<-data[,"Month"=5]
data
datamay<-data[,data[0,"May"]=5]
data[0,"May"]=5
data[0,"May"]==5
data[0,"May"]>5
data[0,"May"=5]
data[,"May"]=5
data
clear
data
data
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM<-data.frame(x=1:3,y=4:6)
testM
testM<-cbind(testM,z=7:9)
testM
class(testM)
testM<-as.matrix(testM)
testM
class(testM)
solve(testM)
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
h8 <- hilbert(8)
h8
h3<-hilbert(3)
h3
sh3<-solve(h3)
sh3
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(h3)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(h3)
source('~/Documents/work/DataS/cachemean.R')
testV<-1:4
mean(testV)
cachemean(testV)
makeVector(testV)
testV<-makeVector(1:4)
cachemean(testV)
testM<-cacheSolve(hilbert(3))
testM<-makeCacheMatrix(hilbert(3))
cacheSolve(testM)
testM
cacheSolve(testM)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM<-makeCacheMatrix(hilbert(3))
cacheSolve(testM)
testM$getInvM()
test2M<-makeCacheMatrix(h3)
test2M
testV
testV$getmean(1:3)
testV$getmean()
testM$getInvM()
m
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
test3M<-makeCacheMatrix(h3)
source('~/Documents/work/DataS/cachemean.R')
testV2<-makeVector(1:5)
testV2$getmean
test3M$getInvM()
test3M$setInvM(h3)
test3M$getInvM()
cachemean(testV2)
testV3<-makeVector(1:6)
cachemean(testV3)
source('~/Documents/work/DataS/cachemean.R')
source('~/Documents/work/DataS/cachemean.R')
testV4<-makeVector(1:6)
cachemean(testV4)
source('~/Documents/work/DataS/cachemean.R')
testV5<-makeVector(1:7)
cachemean(testV5)
cachemean(testV5)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM5<-makeCacheMatrix(h3)
cacheSolve(testM5)
source('~/Documents/work/DataS/cachemean.R')
source('~/Documents/work/DataS/cachemean.R')
testV9<-makeVector(1:9)
cachemean(testV9)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM6<-makeCacheMatrix(h3)
cacheSolve(testM6)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM7<-makeCacheMatrix(h3)
cacheSolve(testM7)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM8<-makeCacheMatrix(h3)
cacheSolve(testM8)
source('~/Documents/work/DataS/c2-w3/ProgrammingAssignment2/cachematrix.R')
testM9<-makeCacheMatrix(h3)
cacheSolve(testM9)
h3
solve(h3)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
head(dataFrame)
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4,col="red")
5
5
4
abline(h=.5,col="green")
12
abline(h=.05,col="green")
dist(dFsm)
plot(as.dendrogram(hc))
hc
dataMatrix
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
mt
distmt1<-dist(mt)
hcmt<-hclust(distmt1)
plot(hcmt)
plot(as.dendrogram(hcmt))
swirl()
cmat
points(cx,cy,col = c("red", "orange","purple"),pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
which.min(distTmp)
apply(distTmp,2,which.min)
points(cx,cy,pch = 19, cex = 2, col = cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
newClust
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch=19, cex=2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame,3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch=9, cex = 2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
plot(kmObj$centers, col=c("black","red","green"),pch=3,cex=3, lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage()
myImage(a1)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, ssd$subject == 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <-dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <-kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster,sub1$activity)
kClust <-kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <-kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
names(pm0)
cnames
cnames <-strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(x0,is.na(x0))
mean(x0[is.na(x0)])
mean(is.na(x0))
names(pm1) <-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <-x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rm = TRUE)
dates<-pm1$V2
dates <- pm1$Dat
dates <- pm1$Date
info()
skip
skip()
buy
0
dates <- pm1$Date
info()
bye()
read.table("activity.zip")
setwd("~/Documents/work/DataS/c5-w2/RepData_PeerAssessment1")
read.table("activity.zip")
activity <- read.csv("activity.csv")
str(activity)
activity$date<-as.Date(strptime(activity$date,"%Y-%m-%d") )
str(activity)
stepsperday<-tapply(activity$steps,activity$date,sum,na.rm = TRUE)
head(stepsperday)
table(activity$date)
str(stepsperday)
stepsavg<-mean(stepsperday)
stepsavg
stepsperday
stepsperday[1]
stepsperday[1,1]
dim(stepsperday)
hist(stepsperday)
hist(activity$date,stepsperday)
hist(stepsperday,breaks = activity$date)
hist(activity$steps)
hist(activity$steps,activity$date)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
activity <- read.csv("activity.csv")
m<-ggplot(activity, aes(date))
m + geom_histogram(binwidth = 0.1)
m<-ggplot(activity, aes(steps))
m + geom_histogram(binwidth = 0.1)
g <- ggplot(activity, aes(date))
g + geom_bar(aes(weight = steps))
activity$date<-as.Date(strptime(activity$date,"%Y-%m-%d"))
g + geom_bar(aes(weight = steps))
g <- ggplot(activity, aes(date))
g + geom_bar(aes(weight = steps))
g <- ggplot(activity, aes(date),na.rm=TRUE)
g + geom_bar(aes(weight = steps))
hist(stepsperday)
abline(stepsavg)
abline(h=stepsavg)
stepsavg
abline(h=round(stepsavg))
round(stepsavg)
abline(h=round(stepsavg))
abline(h=round(stepsavg), col = "red")
ggplot(stepsperday) + geom_histogram(bins = 200)
median(stepsperday)
head(activity,20)
head(activity,200)
table(activity$interval)
stepsperinterval <- tapply(activity$steps,activity$interval,mean,na.rm = TRUE)
stepsperinterval
plot(stepsperinterval, type = "l")
xax<-names(stepsperinterval)
xax
plot(xax,stepsperinterval, type = "l")
summary(stepsperinterval)
ttt<-which.max(stepsperinterval)
ttt
stepsperinterval["835"]
stepsperinterval[ttt]
names(stepsperinterval[ttt])
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:dplyr", unload=TRUE)
install.packages("Hmisc")
library(Hmisc)
activitiesimp<-activity[,1:2]
head(activitiesimp)
activitiesimp$imputedsteps <-impute(activitiesimp$steps,mean)
head(activitiesimp)
stepsavg
nasteps <-is.na(activity$steps)
sum(nasteps)
head(activitiesimp[nasteps])
head(activitiesimp[nasteps,])
table(activitiesimp[nasteps,3])
mean(activity$steps,na.rm=TRUE)
DF <- data.frame(age = c(10, 20, NA, 40), sex = c('male','female'))
# impute with mean value
DF$imputed_age <- with(DF, impute(age, mean))
df
DF
activitiesimp$dateasc<-as.character(activitiesimp$date)
head(activitiesimp)
activitiesimp$imputedsteps <-impute(activitiesimp$steps,mean)
head(activitiesimp)
table(activitiesimp[nasteps,3])
ttt<-activity$steps
ttt$dateasfactor <-as.factor(activity$date)
str(DF)
activity <- read.csv("activity.csv")
str(activity)
ttt<-activity[,1:2]
head(ttt)
ttt$steps <- with(ttt, impute(steps, mean))
head(ttt)
str(ttt)
ttt<-activity[,1:2]
str(ttt)
ttt$stepsi <- with(ttt, impute(steps, mean))
head(ttt)
str(DF)
ttt <-activity[,c(1,3)]
head(ttt)
ttt$stepsi <- with(ttt, impute(steps, mean))
head(ttt)
nadt<-is.na(activity$date)
sum(nadt)
naint<-is.na(activity$interval)
sum(naint)
avgstepsinterval <- tapply(activity$steps,activity$interval,mean,na.rm = TRUE)
str(avgstepsinterval)
avgstepsperday <- tapply(activity$steps,activity$date,mean,na.rm=TRUE)
avgstepsperday
str(avgstepsperday)
avgstepsperday["2012-10-02"]
str(activity)
activity1 <-activity
activity1$date<-as.character(activity1$date)
str(activity)
str(activity1)
fdat<-activity1["2012-10-01",]
str(fdat)
fdat
fdat<-activity1[1,]
fdat
activity1$date<-as.Date(strptime(activity$date,"%Y-%m-%d"))
fdat<-activity1["2012-10-01",]
fdat
str(activity1)
fdat<-activity1[as.Date("2012-10-01"),]
fdat
fdat<-activity1[activity1.date == as.Date("2012-10-01"),]
fdat<-activity1[activity1$date == as.Date("2012-10-01"),]
fdat
table(avgstepsinterval)
head(avgstepsinterval)
tmpna<-is.na(avgstepsinterval)
tmpna
sum(tmpna)
dim(avgstepsinterval)
head(activity[activity$interval == 15])
head(activity[activity$interval == 15,])
str(activity1)
activity1[is.na(),"steps"]<-
impvalues<-activity[nasteps,c(1,3)]
impvalues<-activity[nasteps,c(1,3)]
dim(impvalues)
impvalues$steps<-avgstepsinterval[as.character(impvalues$interval)]
table(impvalues$steps)
head(impvalues)
head(avgstepsinterval)
activity1[nasteps,1]<-impvalues$steps
head(activity1)
str(activity1)
str(impvalues)
activityimp<-activity
impvalues<-activity[nasteps,c(1,3)]
impvalues$steps<-avgstepsinterval[as.character(impvalues$interval)]
activityimp[nasteps,1]<-impvalues$steps
str(activityimp)
summary(avgstepsinterval)
summary(activity$steps)
summary(activityimp$steps)
hist(activity$steps)
hist(activityimp$steps)
stepsperdayImp<-tapply(activityimp$steps,activityimp$date,sum,na.rm = TRUE)
hist(stepsperday, col = "grey")
hist(stepsperdayImp, col = "grey")
par(mfrows = c(2,1))
par(mfrow = c(2,1))
hist(stepsperday, col = "grey")
hist(stepsperdayImp, col = "grey")
par(mar = c(1,1,1,1))
hist(stepsperday, col = "grey")
hist(stepsperdayImp, col = "grey")
par(mar = c(2,2,2,1))
hist(stepsperday, col = "grey")
hist(stepsperdayImp, col = "grey")
summary(stepsperdayImp)
summary(stepsperday)
unlink('PA1_template_cache', recursive = TRUE)
str(activityimp)
activityimp$date<-as.Date(strptime(activityimp,"%Y-%m-%d"))
str(activity)
activity <- read.csv("activity.csv")
activity$date<-as.Date(strptime(activity$date,"%Y-%m-%d"))
nasteps <-is.na(activity$steps)
avgstepsinterval <- tapply(activity$steps,activity$interval,mean,na.rm = TRUE)
activityimp<-activity
impvalues<-activity[nasteps,c(1,3)]
impvalues$steps<-avgstepsinterval[as.character(impvalues$interval)]
activityimp[nasteps,1]<-impvalues$steps
str(activityimp)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
activityimp <- mutate(activityimp, daytype = weekdays(date))
str(activityimp)
activityimp <- mutate(activityimp, daytype = factor(weekdays(date)))
str(activityimp)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:lubridate", unload=TRUE)
wday <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activityimp$daytype <- factor((weekdays(activityimp$date) %in% wday), levels=c(FALSE, TRUE), labels=c('weekend','weekday'))
str(activityimp)
table(activityimp$daytype)
xyplot(mean(steps) ~ interval | daytype, data = activityimp, layout = c(2, 1))
xyplot(steps ~ interval | daytype, data = activityimp, layout = c(2, 1))
xyplot(steps ~ interval | daytype, data = activityimp, layout = c(1, 2))
xyplot(steps ~ interval | daytype, data = activityimp, layout = c(1, 2), type = "l")
xyplot(mean(steps) ~ interval | daytype, data = activityimp, layout = c(1, 2), type = "l")
wdgroup <- group_by(activityimp,daytype)
summarise_at(wdgroup,c("daytype","interval"),mean)
ttt<-summarise_at(wdgroup,c("interval"),mean)
ttt
ttt %>% summarise_at(activityimp,c("daytype","interval"),mean)
ttt %>% summarise_at(activityimp,vars("daytype","interval"),mean)
ttt %>% summarise_at(activityimp,vars(interval,daytype),mean)
ttt<-summarise_at(wdgroup,c("interval","daytype"),mean)
ttt <- activityimp %>% summarise_at(c("daytype","interval"),mean)
ttt
